image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0@sha256:b815d87ee0fa674e7c7369a667b6f8a802c14b81a0c7dc8d8daa08abe68689bf
ffmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-ffmpeg-core@sha256:d35571dc1758cb06d38b36652c0c65979ac61c653d81e776891afbbe15a58761
cublasCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-cublas-cuda12-core@sha256:a1975d2775822b34e3cba37d933a2dc071daedce1909934902b54c60a6d58ab5
cublasCuda12FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-cublas-cuda12-ffmpeg-core@sha256:7cf125652263e401bd5e346cd6b7eaeb963586c64df9bafdb3f2a7ff49d01b7b
cublasCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-cublas-cuda11-core@sha256:5d5444be1407520553c24766744777944f8d29ff2a7920c30210246e08d07fec
cublasCuda11FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-cublas-cuda11-ffmpeg-core@sha256:7949f7ac88821bb63d180af4a5952273708891683d38e47ab563ed790e02d0fa
allInOneCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-aio-gpu-nvidia-cuda-12@sha256:48b1c1167389c78a6b23f91648de91fe73221d394b88794fb93c7cda30267209
allInOneCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-aio-gpu-nvidia-cuda-11@sha256:668b601866233108bbb5336284baa38369fb9ac90d55b5089851f10be1f73091
allInOneCpuImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.22.0-aio-cpu@sha256:538c0a47aa2839f45d5b63017e44e1eb876b3f215c338f2450011d3ce28b872a
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true
