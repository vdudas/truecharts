suite: portal test
templates:
  - common.yaml
release:
  name: test-release-name
  namespace: test-release-namespace
tests:
  - it: should pass with service default values
    set:
      global: &global
        namespace: ix-ns
      enabled: true
      port: 12345
      service:
        my-service:
          enabled: "{{ .Values.enabled }}"
          primary: true
          ports:
            my-port:
              enabled: "{{ .Values.enabled }}"
              primary: true
              port: "{{ .Values.port }}"
      portal:
        main:
          enabled: "{{ .Values.enabled }}"
    asserts:
      - documentIndex: &configMapDoc 1
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /
            port: "12345"
            protocol: http
            url: http://127.0.0.1:12345/

  - it: should pass with service loadBalancer values
    set:
      global: *global
      ip: 1.2.3.4
      service:
        my-service:
          enabled: true
          primary: true
          type: LoadBalancer
          loadBalancerIP: "{{ .Values.ip }}"
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
      portal:
        main:
          enabled: true
    asserts:
      - documentIndex: &configMapDoc 1
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 1.2.3.4
            path: /
            port: "12345"
            protocol: http
            url: http://1.2.3.4:12345/

  - it: should pass with ingress
    set:
      global: *global
      portal:
        main:
          enabled: true
      enabled: true
      host: example.com
      path: /some-path
      ingress:
        my-ingress:
          enabled: "{{ .Values.enabled }}"
          primary: true
          integrations:
            traefik:
              enabled: false
          hosts:
            - host: "{{ .Values.host }}"
              paths:
                - path: "{{ .Values.path }}"
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "443"
            protocol: https
            url: https://example.com:443/some-path

  - it: should pass with ingress and traefik integration
    set:
      global: *global
      portal:
        main:
          enabled: true
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "80"
            protocol: http
            url: http://example.com:80/some-path

  - it: should pass with ingress and tls and traefik integration
    set:
      global: *global
      portal:
        main:
          enabled: true
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
          tls:
            - hosts:
                - example.com
              secretName: example-tls
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "443"
            protocol: https
            url: https://example.com:443/some-path

  - it: should pass with ingress and tls and traefik integration
    set:
      global: *global
      portal:
        main:
          enabled: true
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
          tls:
            - hosts:
                - example.com
              secretName: example-tls
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "443"
            protocol: https
            url: https://example.com:443/some-path

  - it: should pass with ingress and certManager integration and traefik integration
    set:
      global: *global
      portal:
        main:
          enabled: true
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            certManager:
              enabled: true
              certificateIssuer: some-issuer
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "443"
            protocol: https
            url: https://example.com:443/some-path

  - it: should pass with overrides
    set:
      global: *global
      portal:
        main:
          enabled: true
          override:
            protocol: "http"
            host: "test.example.com"
            port: "123"
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            certManager:
              enabled: true
              certificateIssuer: some-issuer
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: test.example.com
            path: /some-path
            port: "123"
            protocol: http
            url: http://test.example.com:123/some-path

  - it: should pass with overrides and multiple portals
    set:
      global: *global
      portal:
        main:
          enabled: true
          override:
            protocol: "http"
            host: "test.example.com"
            port: "123"
        other:
          enabled: true
          path: /some-other-path
          override:
            protocol: "http"
            host: "test123.example.com"
            port: "456"
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            certManager:
              enabled: true
              certificateIssuer: some-issuer
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: test.example.com
            path: /some-path
            port: "123"
            protocol: http
            url: http://test.example.com:123/some-path
      - documentIndex: &configMapDoc 3
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-other
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: test123.example.com
            path: /some-other-path
            port: "456"
            protocol: http
            url: http://test123.example.com:456/some-other-path

  - it: should pass with targetSelector ingress and multiple portals
    set:
      global: *global
      portal:
        main:
          enabled: true
        other:
          enabled: true
          path: /some-other-path
          targetSelector:
            ingress: my-other-ingress
      ingress:
        my-ingress:
          enabled: true
          primary: true
          integrations:
            certManager:
              enabled: true
              certificateIssuer: some-issuer
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: example.com
              paths:
                - path: /some-path
        my-other-ingress:
          enabled: true
          integrations:
            certManager:
              enabled: true
              certificateIssuer: some-other-issuer
            traefik:
              enabled: true
              entrypoints:
                - web
              enableFixedMiddlewares: false
          hosts:
            - host: some.other.example.com
              paths:
                - path: /some-other-path
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
    asserts:
      - documentIndex: &configMapDoc 3
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: example.com
            path: /some-path
            port: "443"
            protocol: https
            url: https://example.com:443/some-path
      - documentIndex: &configMapDoc 4
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-other
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: some.other.example.com
            path: /some-other-path
            port: "443"
            protocol: https
            url: https://some.other.example.com:443/some-other-path

  - it: should pass with targetSelector service and multiple portals
    set:
      global: *global
      portal:
        main:
          enabled: true
        other:
          enabled: true
          path: /some-other-path
          targetSelector:
            service: my-other-service
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
        my-other-service:
          enabled: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 123457
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /
            port: "12345"
            protocol: http
            url: http://127.0.0.1:12345/
      - documentIndex: &configMapDoc 3
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-other
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /some-other-path
            port: "123457"
            protocol: http
            url: http://127.0.0.1:123457/some-other-path

  - it: should pass with targetSelector service and port and multiple portals
    set:
      global: *global
      portal:
        main:
          enabled: true
        other:
          enabled: true
          path: /some-other-path
          targetSelector:
            service: my-other-service
            port: my-other-port
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
        my-other-service:
          enabled: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 123457
            my-other-port:
              enabled: true
              port: 123458
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /
            port: "12345"
            protocol: http
            url: http://127.0.0.1:12345/
      - documentIndex: &configMapDoc 3
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-other
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /some-other-path
            port: "123458"
            protocol: http
            url: http://127.0.0.1:123458/some-other-path

  - it: should pass with targetSelector service and multiple portals
    set:
      global: *global
      portal:
        main:
          enabled: true
        other:
          enabled: true
          path: /some-other-path
          targetSelector:
            service: my-other-service
            port: ""
      service:
        my-service:
          enabled: true
          primary: true
          ports:
            my-port:
              enabled: true
              primary: true
              port: 12345
        my-other-service:
          enabled: true
          ports:
            my-port1:
              enabled: true
              port: 123457
            my-port2:
              enabled: true
              port: 123458
    asserts:
      - documentIndex: &configMapDoc 2
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-main
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /
            port: "12345"
            protocol: http
            url: http://127.0.0.1:12345/
      - documentIndex: &configMapDoc 3
        isKind:
          of: ConfigMap
      - documentIndex: *configMapDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-tcportal-other
      - documentIndex: *configMapDoc
        equal:
          path: data
          value:
            host: 127.0.0.1
            path: /some-other-path
            port: "123457"
            protocol: http
            url: http://127.0.0.1:123457/some-other-path
